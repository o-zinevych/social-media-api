services:
  db:
    image: postgres:16.8-alpine3.20
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - my_db:$PGDATA

  social_media:
    build:
      context: .
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - my_media:/app/media
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db

  redis:
    image: redis:alpine

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - .env
    command: "celery -A social_media_api worker -l INFO"
    depends_on:
      - redis
      - social_media
      - db

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - .env
    command: >
      sh -c "python manage.py wait_for_db &&
            celery -A social_media_api beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - redis
      - social_media
      - db

volumes:
  my_media:
  my_db:
